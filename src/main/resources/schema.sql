CREATE TABLE IF NOT EXISTS rating (
	rating_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(7) NOT NULL UNIQUE);

CREATE TABLE IF NOT EXISTS film (
	film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(60) NOT NULL,
	description varchar(255) NOT NULL,
	release_date date NOT NULL,
	duration int NOT NULL,
	rating int REFERENCES rating (rating_id) NOT NULL,
CONSTRAINT release_after_first_film CHECK (release_date > '1895-12-28'),
CONSTRAINT not_blank CHECK (name <> ''AND description <> ''AND duration > 0));

CREATE TABLE IF NOT EXISTS genre (
	genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre (
	film_id int REFERENCES film (film_id) NOT NULL,
	genre_id int REFERENCES genre (genre_id) NOT NULL,
CONSTRAINT pk_fields_film_genre PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
	user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email varchar(30) NOT NULL,
	name varchar(30) NOT NULL,
	birthday date NOT NULL,
CONSTRAINT not_blank CHECK (name <> ''),
CONSTRAINT birthday_past CHECK (birthday < NOW())
);

CREATE TABLE IF NOT EXISTS friends (
	user_id int NOT NULL REFERENCES users (user_id),
	friend_id int NOT NULL REFERENCES users (user_id),
	confirmed boolean NOT NULL,
CONSTRAINT pk_fields_friends PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
	film_id int REFERENCES film (film_id) NOT NULL,
	user_id int REFERENCES users (user_id) NOT NULL,
CONSTRAINT pk_fields_likes PRIMARY KEY (film_id, user_id)
);

CREATE INDEX IF NOT EXISTS film_name_index ON film (name);

CREATE INDEX IF NOT EXISTS film_rating_index ON film (rating);

CREATE INDEX IF NOT EXISTS users_email_index ON users (email);

CREATE INDEX IF NOT EXISTS users_name_index ON users (name);